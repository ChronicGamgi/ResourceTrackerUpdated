import fs from 'fs';
import path from 'path';
import crypto from 'crypto';

const MIGRATIONS_DIR = path.join(process.cwd(), 'drizzle');
const OUTPUT_FILE = path.join(process.cwd(), 'lib', 'migration-hashes.ts');
const CARRIAGE_RETURN = 0x0d; // The \r byte

/**
 * Reads a file as a raw buffer and removes all carriage return bytes (\r).
 * This provides a platform-agnostic way to normalize line endings to LF
 * before hashing, by operating on the byte level.
 * @param filePath The path to the file.
 * @returns A Buffer with all \r characters removed.
 */
function getNormalizedFileBuffer(filePath: string): Buffer {
  const fileBuffer = fs.readFileSync(filePath);
  const normalizedBytes: number[] = [];
  for (const byte of fileBuffer) {
    if (byte !== CARRIAGE_RETURN) {
      normalizedBytes.push(byte);
    }
  }
  return Buffer.from(normalizedBytes);
}

/**
 * Generates a `migration-hashes.ts` file containing the SHA256 hashes
 * of all .sql files in the drizzle directory. It normalizes line endings
 * at the byte level to ensure hashes are consistent across platforms.
 */
function generateMigrationHashes() {
  try {
    console.log('üîç Starting migration hash generation...');
    const migrationFiles = fs
      .readdirSync(MIGRATIONS_DIR)
      .filter((file) => file.endsWith('.sql'))
      .sort(); // Sort to ensure consistent order

    if (migrationFiles.length === 0) {
      console.log('No .sql migration files found. Skipping hash generation.');
      // Still create the file with an empty array for consistency
      const emptyFileContent = `// This file is auto-generated by \`npm run db:generate-hashes\`. Do not edit manually.\n\nexport const MIGRATION_HASHES: string[] = [];\n`;
      fs.writeFileSync(OUTPUT_FILE, emptyFileContent, 'utf-8');
      return;
    }

    const hashes = migrationFiles.map((file) => {
      const filePath = path.join(MIGRATIONS_DIR, file);
      const normalizedBuffer = getNormalizedFileBuffer(filePath);
      const hash = crypto.createHash('sha256').update(normalizedBuffer).digest('hex');
      console.log(`  - Hashed ${file}: ${hash}`);
      return hash;
    });

    const fileContent = `// This file is auto-generated by \`npm run db:generate-hashes\`. Do not edit manually.\n\nexport const MIGRATION_HASHES: string[] = ${JSON.stringify(
      hashes,
      null,
      2
    )};\n`;

    fs.writeFileSync(OUTPUT_FILE, fileContent, 'utf-8');
    console.log(`‚úÖ Successfully generated migration hashes at ${OUTPUT_FILE}`);
  } catch (error) {
    console.error('‚ùå An error occurred while generating migration hashes:', error);
    process.exit(1);
  }
}

generateMigrationHashes();